<!--
***********************************************************************************************
FSharp.NET.Core.Sdk.targets

WARNING:  You CAN MODIFY this file, doesnt matter if you are not knowledgeable about MSBuild and
          without a backup copy.
          Incorrect changes to this file will make it impossible to load or build your projects
          from the command-line or the IDE. 
          Just remove FSharp.NET.Sdk package from nuget cache and re-restore.

This file defines the steps in the standard build process specific for F# .NET projects.
For example, it contains the step that actually calls the F# compiler. 
Flow is: msbuild -> CoreCompile -> dotnet compile-fsc -> fsc
The remainder of the build process is defined in Microsoft.Common.targets, but is not imported by 
this file.

***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup Condition=" '$(BuildWith)' == 'fable' ">
        <!-- override per fable da spostare nel target file -->
        <TargetExt>.js</TargetExt>
    </PropertyGroup>

    <ItemGroup Condition=" '$(BuildWith)' == 'fable' ">

        <!--<Reference Include="@(PackageReference -> 'node_modules/fable-core/%(FullPath)')" />-->
        <!--<Message Text="Nome2 node_modules/fable-core/%(FablePackage.Identity)" Importance="High" />-->
        <!--<Reference Include="node_modules/fable-core/%(FablePackage.Identity)" />-->

        <MyPkg Include="@(FablePackage)">
             <DllDir>$([System.String]::new('%(Identity)').ToLower().Replace('.','-'))</DllDir>
             <DllName>%(Identity)</DllName>
        </MyPkg>

        <Reference Include="@(MyPkg -> 'node_modules/%(DllDir)/%(DllName).dll')" />

        <!--<Reference Include="node"  
            Text = "Items in ExampColl: @(ExampColl)"  
            Condition="'%(Number)'=='2'"/>  -->

        <!--<Reference Include="node_modules/fable-core/Fable.Core.dll" />-->
    </ItemGroup>    

    <Target
          Condition=" '$(BuildWith)' == 'fable' "
          Name="CoreCompile"
          Inputs="$(MSBuildAllProjects);
                @(Compile);
                @(_CoreCompileResourceInputs);
                $(ApplicationIcon);
                $(AssemblyOriginatorKeyFile);
                @(ReferencePath);
                @(CompiledLicenseFile);
                @(LinkResource);
                @(EmbeddedDocumentation);
                $(Win32Resource);
                $(Win32Manifest);
                @(CustomAdditionalCompileInputs);
                $(ResolvedCodeAnalysisRuleSet);
                @(AdditionalFiles);
                @(EmbeddedFiles)"
          Outputs="@(DocFileItem);
                 @(IntermediateAssembly);
                 @(_DebugSymbolsIntermediatePath);
                 $(NonExistentFile);
                 @(CustomAdditionalCompileOutputs)"
          Returns="@(FscCommandLineArgs)"
          DependsOnTargets="$(CoreCompileDependsOn)"
    >
        <PropertyGroup>
            <_IntermediateOutputPathFull>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))</_IntermediateOutputPathFull>
            <_TargetFrameworkDefine>$(TargetFramework.Replace('.','_').ToUpper())</_TargetFrameworkDefine>
        </PropertyGroup>

        <!--STEP1 Create the fable-compiler response file lines-->
        <ItemGroup>
            <FableCompilerResponseLines Include="--sourceMaps:$(SourceMaps)" />
            
            <!--FABLE_COMPILER-->
            <FableCompilerResponseLines Include="@(ReferencePath)" />

            <FableCompilerResponseLines Include="@(Compile)" />
        </ItemGroup>

        <Message Text="ciao da fable compiler" Importance="High" />

        <WriteLinesToFile File="$(_IntermediateOutputPathFull)$(TargetName)$(TargetExt)" Lines="@(FableCompilerResponseLines)" Overwrite="True" />
    </Target>

</Project>
